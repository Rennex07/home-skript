command /home:
	aliases: /homes
	trigger:
		set {_HomesGUI} to chest inventory with 4 rows named "<##3F3F3F>ʜᴏᴍᴇꜱ"
		set slots 12, 13, 14, 15 and 16 of {_HomesGUI} to light gray bed named "<##CFCFCF>ɴᴏ ʜᴏᴍᴇ ꜱᴇᴛ" with lore "&f- Click to create a home"
		set slots 21, 22, 23, 24 and 25 of {_HomesGUI} to gray dye named "<##CFCFCF>ɴᴏ ʜᴏᴍᴇ ꜱᴇᴛ" with lore "&fClick to create a home"
		if {homes::%uuid of player%::1} is set:
			set slot 12 of {_HomesGUI} to light blue bed named "<##00A4FC>ʜᴏᴍᴇ 1" with lore "&fClick to teleport to your home"
			set slot 21 of {_HomesGUI} to blue dye named "<##00A4FC>ʜᴏᴍᴇ 1" with lore "&fClick to delete this home"
		else:
			if size of {homes::%player's uuid%::*} = {maxhome::%player's uuid%}:
				set slot 12 of {_HomesGUI} to red bed named "<##FC0000>ɴᴏ ᴘᴇʀᴍɪꜱꜱɪᴏɴ" with lore "&fYou need a higher rank for this home"
				set slot 21 of {_HomesGUI} to red dye named "<##FC0000>ɴᴏ ᴘᴇʀᴍɪꜱꜱɪᴏɴ" with lore "&fYou need a higher rank for this home"
		if {homes::%uuid of player%::2} is set:
			set slot 13 of {_HomesGUI} to light blue bed named "<##00A4FC>ʜᴏᴍᴇ 2" with lore "&fClick to teleport to your home"
			set slot 22 of {_HomesGUI} to blue dye named "<##00A4FC>ʜᴏᴍᴇ 2" with lore "&fClick to delete this home"
		else:
			if size of {homes::%player's uuid%::*} = {maxhome::%player's uuid%}:
				set slot 13 of {_HomesGUI} to red bed named "<##FC0000>ɴᴏ ᴘᴇʀᴍɪꜱꜱɪᴏɴ" with lore "&fYou need a higher rank for this home"
				set slot 22 of {_HomesGUI} to red dye named "<##FC0000>ɴᴏ ᴘᴇʀᴍɪꜱꜱɪᴏɴ" with lore "&fYou need a higher rank for this home"
		if {homes::%uuid of player%::3} is set:
			set slot 14 of {_HomesGUI} to light blue bed named "<##00A4FC>ʜᴏᴍᴇ 3" with lore "&fClick to teleport to your home"
			set slot 23 of {_HomesGUI} to blue dye named "<##00A4FC>ʜᴏᴍᴇ 3" with lore "&fClick to delete this home"
		else:
			if size of {homes::%player's uuid%::*} = {maxhome::%player's uuid%}:
				set slot 14 of {_HomesGUI} to red bed named "<##FC0000>ɴᴏ ᴘᴇʀᴍɪꜱꜱɪᴏɴ" with lore "&fYou need a higher rank for this home"
				set slot 23 of {_HomesGUI} to red dye named "<##FC0000>ɴᴏ ᴘᴇʀᴍɪꜱꜱɪᴏɴ" with lore "&fYou need a higher rank for this home"
		if {homes::%uuid of player%::4} is set:
			set slot 15 of {_HomesGUI} to light blue bed named "<##00A4FC>ʜᴏᴍᴇ 4" with lore "&fClick to teleport to your home"
			set slot 24 of {_HomesGUI} to blue dye named "<##00A4FC>ʜᴏᴍᴇ 4" with lore "&fClick to delete this home"
		else:
			if size of {homes::%player's uuid%::*} = {maxhome::%player's uuid%}:
				set slot 15 of {_HomesGUI} to red bed named "<##FC0000>ɴᴏ ᴘᴇʀᴍɪꜱꜱɪᴏɴ" with lore "&fYou need a higher rank for this home"
				set slot 24 of {_HomesGUI} to red dye named "<##FC0000>ɴᴏ ᴘᴇʀᴍɪꜱꜱɪᴏɴ" with lore "&fYou need a higher rank for this home"
		if {homes::%uuid of player%::5} is set:
			set slot 16 of {_HomesGUI} to light blue bed named "<##00A4FC>ʜᴏᴍᴇ 5" with lore "&fClick to teleport to your home"
			set slot 25 of {_HomesGUI} to blue dye named "<##00A4FC>ʜᴏᴍᴇ 5" with lore "&fClick to delete this home"
		else:
			if size of {homes::%player's uuid%::*} = {maxhome::%player's uuid%}:
				set slot 16 of {_HomesGUI} to red bed named "<##FC0000>ɴᴏ ᴘᴇʀᴍɪꜱꜱɪᴏɴ" with lore "&fYou need a higher rank for this home"
				set slot 25 of {_HomesGUI} to red dye named "<##FC0000>ɴᴏ ᴘᴇʀᴍɪꜱꜱɪᴏɴ" with lore "&fYou need a higher rank for this home"
				
		if {inteam::%player's uuid%} is not set:
			set slot 10 of {_HomesGUI} to {item.red_banner} named "<##FC0000>ᴛᴇᴀᴍ ʜᴏᴍᴇ" with lore "&fYou don't have a team."
			set slot 19 of {_HomesGUI} to red dye named "<##FC0000>ᴛᴇᴀᴍ ʜᴏᴍᴇ" with lore "&fYou don't have a team."
		else:
			loop {teams::*}:
				if {teams::%loop-value%::players::*} contains player:
					set {_team} to loop-value
			if {_team} is set:
				if {teams::%{_team}%::home} is set:
					set slot 10 of {_HomesGUI} to {item.white_banner} named "<##00A4FC>ᴛᴇᴀᴍ ʜᴏᴍᴇ" with lore "&fClick to teleport to your team's home"
					set slot 19 of {_HomesGUI} to blue dye named "<##00A4FC>ᴛᴇᴀᴍ ʜᴏᴍᴇ" with lore "&fClick to teleport to your team's home"
				else:
					set slot 10 of {_HomesGUI} to {item.white_banner} named "<##FC0000>ᴛᴇᴀᴍ ʜᴏᴍᴇ" with lore "&fClick to create a team home."
					set slot 19 of {_HomesGUI} to gray dye named "<##FC0000>ᴛᴇᴀᴍ ʜᴏᴍᴇ" with lore "&fClick to create a team home."
				
		open {_HomesGUI} to player

on inventory click:
	if name of event-inventory = "<##3F3F3F>ʜᴏᴍᴇꜱ":
		cancel event
		if clicked slot = 10:
			if {inteam::%player's uuid%} is not set:
				send "&cYou do not have a team." to player
				send action bar "&cYou do not have a team." to player
				play sound "entity.villager.no" to player
				play sound "block.dispenser.fail" to player
			else:
				loop {teams::*}:
					if {teams::%loop-value%::players::*} contains player:
						set {_team} to loop-value
				if {_team} is set:
					if {teams::%{_team}%::home} is set:
						make player execute command "/team home"
						play sound "block.dispenser.fail" to player
						close player's inventory
					else:
						make player execute command "/team sethome"
						play sound "block.dispenser.fail" to player
						make player execute command "/homes"
		if clicked slot = 19:
			if {inteam::%player's uuid%} is not set:
				send "&cYou do not have a team." to player
				send action bar "&cYou do not have a team." to player
				play sound "entity.villager.no" to player
				play sound "block.dispenser.fail" to player
			else:
				loop {teams::*}:
					if {teams::%loop-value%::players::*} contains player:
						set {_team} to loop-value
				if {_team} is set:
					if {teams::%{_team}%::home} is set:
						make player execute command "/team home"
						play sound "block.dispenser.fail" to player
						close player's inventory
					else:
						make player execute command "/team sethome"
						play sound "block.dispenser.fail" to player
						make player execute command "/homes"
		if clicked slot = 12:
			homeTeleport(player, 1)
		if clicked slot = 13:
			homeTeleport(player, 2)
		if clicked slot = 14:
			homeTeleport(player, 3)
		if clicked slot = 15:
			homeTeleport(player, 4)
		if clicked slot = 16:
			homeTeleport(player, 5)
		if clicked slot = 21:
			homeCreate(player, 1)
		if clicked slot = 22:
			homeCreate(player, 2)
		if clicked slot = 23:
			homeCreate(player, 3)
		if clicked slot = 24:
			homeCreate(player, 4)
		if clicked slot = 25:
			homeCreate(player, 5)
	if name of event-inventory contains "<##3F3F3F>Confirm Delete":
		cancel event
		if clicked slot = 15:
			set {_name} to name of event-inventory
			set {_name::*} to split {_name} at " "
			homeDelete(player, {_name::3})
			make player execute command "/home"
			play sound "block.dispenser.fail" to player
		if clicked slot = 11:
			play sound "block.dispenser.fail" to player
			make player execute command "/home"

command /sethome:
	trigger:
		if size of {homes::%player's uuid%::*} = {maxhome::%player's uuid%}:
			send "&cYou reached home limits." to player
			send action bar "&cYou reached home limits." to player
			play sound "entity.villager.no" to player
			stop
		if player's world is "spawn" or "afk" or "arena_rtpportal" or "arena_badlands" or "arena_desert" or "arena_flat" or "arena_plains":
			send "&cYou cannot set homes on this region."
			send action bar "&cYou cannot set homes on this region." to player
			play sound "entity.villager.no" to player
			stop
		set {_t} to size of {homes::%player's uuid%::*}
		add 1 to {_t}
		homeCreate(player, {_t})

command /delhome <integer>:
	trigger:
		homeDelete(player, "%arg-1%")

function Message(p: player, text: string):
	send action bar {_text} to {_p}

function homeCreate(p: player, integer: integer):
	if {homes::%{_p}'s uuid%::%{_integer}%} is not set:
		if size of {homes::%{_p}'s uuid%::*} = {maxhome::%{_p}'s uuid%}:
			send "&cYou reached home limits." to {_p}
			send action bar "&cYou reached home limits." to {_p}
			play sound "entity.villager.no" to {_p}
			stop
		else:
			if {_p}'s world is "spawn" or "afk" or "arena_rtpportal" or "arena_badlands" or "arena_desert" or "arena_flat" or "arena_plains":
				send "&cYou cannot set homes on this region." to {_p}
				send action bar "&cYou cannot set homes on this region." to {_p}
				play sound "entity.villager.no" to {_p}
				stop
			set {homes::%{_p}'s uuid%::%{_integer}%} to location at {_p}
			send "<##A7A7A7>Home set" to {_p}
			send action bar "<##A7A7A7>Home set" to {_p}
			make {_p} say "/home"
			play sound "block.dispenser.fail" to {_p}
	else:
		homeDeleteGui({_p}, {_integer})

function homeDeleteGui(p: player, integer: integer):
	if {homes::%{_p}'s uuid%::%{_integer}%} is set:
		open chest inventory named "<##3F3F3F>Confirm Delete<##C6C6C6> %{_integer}%" to {_p}
		set slot 15 of {_p}'s current inventory to lime stained glass pane named "<##00FC00>ᴄᴏɴꜰɪʀᴍ" with lore "&fClick to delete"
		set slot 11 of {_p}'s current inventory to red stained glass pane named "<##FC0000>ᴄᴀɴᴄᴇʟ" with lore "&fClick to cancel"
		set slot 13 of {_p}'s current inventory to blue dye named "<##00A4FC>ʜᴏᴍᴇ %{_integer}%"
		play sound "block.dispenser.fail" to {_p}
	else:
		play sound "block.dispenser.fail" to {_p}
			
function homeDelete(p: player, integer: string):
	send "<##A7A7A7>Home deleted" to {_p}
	send action bar "<##A7A7A7>Home deleted" to {_p}
	clear {homes::%{_p}'s uuid%::%{_integer}%}
	remove 1 from {homes::%{_p}'s uuid%}
		
function homeTeleport(p: player, integer: integer):
	if {homes::%{_p}'s uuid%::%{_integer}%} is set:
		set {_loc} to location of block at {_p}
		close {_p}'s inventory
		play sound "block.dispenser.fail" to {_p}
		if {hometeleporting::%{_p}'s uuid%} is set:
			stop
		if {hometeleporting::%{_p}'s uuid%} is not set:
			set {hometeleporting::%{_p}'s uuid%} to true
			set {pos::%{_p}'s uuid%} to {_p}'s location
			if {hometeleporting::%{_p}'s uuid%} is set:
				send "<##A7A7A7>Teleporting in <##37BFF8>5 <##A7A7A7>seconds" to {_p}
				send action bar "<##A7A7A7>Teleporting in <##37BFF8>5 <##A7A7A7>seconds" to {_p}
				wait 1 second
			if {hometeleporting::%{_p}'s uuid%} is set:
				send "<##A7A7A7>Teleporting in <##37BFF8>4 <##A7A7A7>seconds" to {_p}
				send action bar "<##A7A7A7>Teleporting in <##37BFF8>4 <##A7A7A7>seconds" to {_p}
				wait 1 second
			if {hometeleporting::%{_p}'s uuid%} is set:
				send "<##A7A7A7>Teleporting in <##37BFF8>3 <##A7A7A7>seconds" to {_p}
				send action bar "<##A7A7A7>Teleporting in <##37BFF8>3 <##A7A7A7>seconds" to {_p}
				wait 1 second
			if {hometeleporting::%{_p}'s uuid%} is set:
				send "<##A7A7A7>Teleporting in <##37BFF8>2 <##A7A7A7>seconds" to {_p}
				send action bar "<##A7A7A7>Teleporting in <##37BFF8>2 <##A7A7A7>seconds" to {_p}
				wait 1 second
			if {hometeleporting::%{_p}'s uuid%} is set:
				send "<##A7A7A7>Teleporting in <##37BFF8>1 <##A7A7A7>seconds" to {_p}
				send action bar "<##A7A7A7>Teleporting in <##37BFF8>1 <##A7A7A7>seconds" to {_p}
				wait 1 second
			if {hometeleporting::%{_p}'s uuid%} is set:
				send action bar "<##A7A7A7>You teleported to your home" to {_p}
				send "<##A7A7A7>You teleported to your home" to {_p}
				delete {hometeleporting::%{_p}'s uuid%}
				delete {pos::%{_p}'s uuid%}
				teleport {_p} to {homes::%{_p}'s uuid%::%{_integer}%}
					
	else:
		homeDeleteGui({_p}, {_integer})
		
on join:
	if {pos::%player's uuid%} is set:
		delete {pos::%player's uuid%}
	if {hometeleporting::%player's uuid%} is set:
		delete {hometeleporting::%player's uuid%}
	if player has permission "homes.default":
		set {maxhome::%player's uuid%} to 2
	if player has permission "homes.donutplus":
		set {maxhome::%player's uuid%} to 5
		
on quit:
	if {pos::%player's uuid%} is set:
		delete {pos::%player's uuid%}
	if {hometeleporting::%player's uuid%} is set:
		delete {hometeleporting::%player's uuid%}
		
on player move:
	if {hometeleporting::%player's uuid%} is set:
		if distance between {pos::%player's uuid%} and player's location is bigger than 0.5:
			delete {hometeleporting::%player's uuid%}
			delete {pos::%player's uuid%}
			send "<##FB5454>Teleport cancelled because you moved."
			send action bar "<##FB5454>Teleport cancelled because you moved." to player